const app = require('express').Router();
const makeRepo = require('../../github/makeRepo');
const addFile = require('../../github/addFile');
// const build = require('../../../build');

app.post('/', (req, res, next) => {
  const project = req.body;
  console.log(req.session);
  const gitKey = req.session.keys.github;
  makeRepo(gitKey, project.name)
  .then((result) => {
    addFile(gitKey, result.full_name, '.gitignore', `# Logs
logs
*.log
npm-debug.log*

# Runtime data
pids
*.pid
*.seed

# Directory for instrumented libs generated by jscoverage/JSCover
lib-cov

# Coverage directory used by tools like istanbul
coverage

# nyc test coverage
.nyc_output

# Grunt intermediate storage (http://gruntjs.com/creating-plugins#storing-task-files)
.grunt

# node-waf configuration
.lock-wscript

# Compiled binary addons (http://nodejs.org/api/addons.html)
build/Release

# Dependency directories
node_modules
jspm_packages
dist/

# Optional npm cache directory
.npm

# Optional REPL history
.node_repl_history

#configs
config.json
`).then(() =>

      addFile(gitKey, result.full_name, 'index.js', `const db = require('./server/db');
const app = require('./server/app');
const http = require('http');

const port = process.env.PORT || 3000;
const seed = !!process.env.SEED;

db.seed(seed)
.then(() => http.createServer(app)
.listen(port, () => console.log(\`listening on port \${port}\`)));
`)).then(() =>

      addFile(gitKey, result.full_name, 'README.md', `# Sofastack Generated Project
This project was generated using [SofaStack](https://github.com/kjalnes/sofastack)
`))
.then(() => res.json({name: result.full_name}));
  });
  // build(project)
  // .then(({projectFolder, zip}) => {
  //   res.json({projectFolder, zip});
  // });
});

app.get('/', (req, res, next) => {
  console.log(req.session);
  res.json(req.session);
  // build(project)
  // .then(({projectFolder, zip}) => {
  //   res.json({projectFolder, zip});
  // });
});

module.exports = app;
